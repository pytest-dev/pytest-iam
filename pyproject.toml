[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pytest-iam"
version = "0.1.1"
description = "A fully functional OAUTH2 / OpenID Connect (OIDC) server to be used in your testsuite"
authors = [{name="Yaal Coop", email="contact@yaal.coop"}]
license = "MIT"
readme = "README.md"
packages = [{include = "pytest_iam"}]
keywords = ["oidc", "oauth", "oauth2", "openid", "identity", "pytest", "unit tests", "iam"]
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "License :: OSI Approved :: MIT License",
    "Environment :: Web Environment",
    "Programming Language :: Python",
    "Operating System :: OS Independent",
    "Framework :: Pytest",
]

repository = "https://github.com/pytest-dev/pytest-iam"
documentation = "https://pytest-iam.readthedocs.io/en/latest/"

requires-python = ">=3.10"
dependencies = [
    "canaille[oidc]>=0.0.71",
    "portpicker>=1.6.0",
    "pytest>=7.0.0",
    "faker>=21.0.0",
]

[dependency-groups]
dev = [
    "authlib>=1.2.1",
    "pre-commit-uv>=4.1.4",
    "pytest-cov>=6.0.0",
    "requests>=2.31.0",
    "tox-uv>=1.16.0",
]

doc = [
    "myst-parser>=3.0.0",
    "shibuya>=2024.7.13",
    "sphinx>=7.0.0",
    "sphinx-issues>=4.0.0",
]

[project.entry-points."pytest11"]
iam = "pytest_iam"

[tool.ruff.lint]
select = [
    "B", # flake8-bugbear
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "UP", # pyupgrade
]
ignore = [
    "E501", # line-too-long
    "E722", # bare-except
    "D100", # public module
    "D101", # public class
    "D102", # public method
    "D103", # public function
    "D104", # public package
    "D105", # magic method
    "D106", # nested class
    "D107", # public init
    "D203", # no-blank-line-before-class
    "D213", # multi-line-summary-second-line
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.format]
docstring-code-format = true

[tool.tox]
requires = ["tox>=4.19"]
env_list = [
    "doc",
    "style",
    "py310",
    "py311",
    "py312",
    "py313",
    "minversions",
]

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
with_dev = true
commands = [
    ["pytest", "--showlocals", "--full-trace", "{posargs}"],
]

[tool.tox.env.style]
runner = "uv-venv-runner"
commands = [
    ["pre-commit", "run", "--all-files", "--show-diff-on-failure"],
]

[tool.tox.env.minversions]
runner = "uv-venv-lock-runner"
with_dev = true
uv_resolution = "lowest-direct"

[tool.tox.env.doc]
dependency_groups = ["doc"]
commands = [
    ["sphinx-build", "--builder", "html", "doc", "build/sphinx/html"],
    ["sphinx-build", "--builder", "man", "doc", "build/sphinx/html"],
]
