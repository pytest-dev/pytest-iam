[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pytest-iam"
version = "0.1.0"
description = "A fully functional OAUTH2 / OpenID Connect (OIDC) server to be used in your testsuite"
authors = ["Yaal Coop <contact@yaal.coop>"]
license = "MIT"
readme = "README.md"
packages = [{include = "pytest_iam"}]
keywords = ["oidc", "oauth", "oauth2", "openid", "identity", "pytest", "unit tests", "iam"]
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "License :: OSI Approved :: MIT License",
    "Environment :: Web Environment",
    "Programming Language :: Python",
    "Operating System :: OS Independent",
    "Framework :: Pytest",
]

repository = "https://github.com/pytest-dev/pytest-iam"
documentation = "https://pytest-iam.readthedocs.io/en/latest/"

[tool.poetry.dependencies]
python = "^3.9"
canaille = {version = ">=0.0.54,<1", extras = ["oidc"] }
portpicker = ">=1.6.0"
pytest = ">=7.0.0"
faker = ">=21.0.0"

[tool.poetry.plugins.pytest11]
iam = "pytest_iam"

[tool.poetry.group.dev.dependencies]
authlib = "^1.2.1"
pytest-cov = "^6.0.0"
requests = "^2.31.0"
types-requests = "*"

[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
myst-parser = "^3.0.0"
shibuya = "^2024.7.13"
sphinx = "^7.0.0"
sphinx-issues = "^4.0.0"

[tool.ruff.lint]
select = [
    "B", # flake8-bugbear
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "UP", # pyupgrade
]
ignore = [
    "E501", # line-too-long
    "E722", # bare-except
    "D100", # public module
    "D101", # public class
    "D102", # public method
    "D103", # public function
    "D104", # public package
    "D105", # magic method
    "D106", # nested class
    "D107", # public init
    "D203", # no-blank-line-before-class
    "D213", # multi-line-summary-second-line
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.format]
docstring-code-format = true

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
skipsdist = true
envlist =
    style
    py39
    py310
    py311
    py312
    doc

[testenv]
allowlist_externals = poetry
commands =
    poetry install
    poetry run pytest {posargs}

[testenv:doc]
commands =
    poetry install --with doc --without dev
    poetry run sphinx-build doc build/sphinx/html

[testenv:style]
commands =
    pip install pre-commit
    pre-commit run --all-files
"""
